import React, { useEffect, useState } from 'react';
import styles from '../ResultItem.module.scss';
import Image from 'next/image';
import clsx from 'clsx';
import ButtonShare, { BtnConstClassName } from '@/components/global/ButtonShare';
import { RoomItemProps } from '../@types';
import LoadingItem from '@/components/global/LoadingItem';



const RoomItem = ({ data }: RoomItemProps) => {

    const [favourite, setFavourite] = useState<Boolean>(false);
    const [isLoading, setIsLoading] = useState<Boolean>(false);

    const loadData = async () => {
        await setIsLoading(true);
        setTimeout(() => {
            setIsLoading(false);
        }, 2500)
    }


    useEffect(() => {
        loadData()
        if (data.favouriteRoom) {
            setFavourite(true)
        }
    }, [data])

    const handleFavourite = () => setFavourite(current => !current);


    return (
        <>
            {
                !isLoading &&
                <div className={clsx('flex gap-6 mb-4 last-of-type:mb-0', styles.resultItem)}>
                    <div>
                        <div className='w-56 h-56 overflow-hidden rounded-xl'>
                            <Image className='w-full h-full object-cover' src={data.image} alt={data.roomName} width={0} height={0} unoptimized />
                        </div>
                    </div>

                    <div className='flex flex-col justify-around relative'>

                        <div onClick={handleFavourite} className='absolute top-0 right-0 cursor-pointer'>
                            <svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24" stroke={favourite ? '#ff4d4f' : '#20272C'} fill={favourite ? '#ff4d4f' : 'rgba(32, 39, 44, 0.04)'} className='w-[20px] h-[18px]'>
                                <path d="M11.645 20.91l-.007-.003-.022-.012a15.247 15.247 0 01-.383-.218 25.18 25.18 0 01-4.244-3.17C4.688 15.36 2.25 12.174 2.25 8.25 2.25 5.322 4.714 3 7.688 3A5.5 5.5 0 0112 5.052 5.5 5.5 0 0116.313 3c2.973 0 5.437 2.322 5.437 5.25 0 3.925-2.438 7.111-4.739 9.256a25.175 25.175 0 01-4.244 3.17 15.247 15.247 0 01-.383.219l-.022.012-.007.004-.003.001a.752.752 0 01-.704 0l-.003-.001z" />
                            </svg>
                        </div>

                        <div className='flex items-center mb-2'>
                            <svg width="14" height="18" viewBox="0 0 14 18" fill="none" xmlns="http://www.w3.org/2000/svg">
                                <path d="M7 0.25C3.54961 0.25 0.75 2.76992 0.75 5.875C0.75 10.875 7 17.75 7 17.75C7 17.75 13.25 10.875 13.25 5.875C13.25 2.76992 10.4504 0.25 7 0.25ZM7 9C6.50555 9 6.0222 8.85338 5.61107 8.57867C5.19995 8.30397 4.87952 7.91352 4.6903 7.45671C4.50108 6.99989 4.45157 6.49723 4.54804 6.01227C4.6445 5.52732 4.8826 5.08186 5.23223 4.73223C5.58186 4.3826 6.02732 4.1445 6.51227 4.04804C6.99723 3.95157 7.49989 4.00108 7.95671 4.1903C8.41352 4.37952 8.80397 4.69995 9.07867 5.11107C9.35338 5.5222 9.5 6.00555 9.5 6.5C9.49928 7.16282 9.23565 7.79828 8.76697 8.26697C8.29828 8.73565 7.66282 8.99928 7 9Z" fill="#2CA3A8" />
                            </svg>
                            <p className='text-Main text-[12px] leading-[18px] ml-3'>{data.location}</p>
                        </div>

                        <h1 className={clsx(styles.itemTitle, 'line-clamp-1')}>{data.roomName}</h1>

                        <div className='flex'>
                            <div className='flex items-center mr-8'>
                                <svg xmlns="http://www.w3.org/2000/svg" width="20" height="14" viewBox="0 0 20 14" fill="none">
                                    <path d="M13.125 7C12.3218 7 11.5453 6.64141 10.9375 5.99063C10.3464 5.35586 9.9855 4.50938 9.92183 3.60781C9.85386 2.64609 10.1472 1.76172 10.7476 1.11719C11.348 0.472656 12.1875 0.125 13.125 0.125C14.0558 0.125 14.8976 0.478906 15.496 1.12187C16.1003 1.77109 16.3945 2.65391 16.3265 3.60742C16.2613 4.51016 15.9007 5.35625 15.3109 5.99023C14.7046 6.64141 13.9285 7 13.125 7ZM18.2746 13.875H7.97574C7.81015 13.8759 7.64658 13.8388 7.49759 13.7665C7.34861 13.6943 7.21818 13.5888 7.11636 13.4582C7.00835 13.3166 6.93377 13.1525 6.89819 12.978C6.8626 12.8036 6.86695 12.6233 6.91089 12.4508C7.2398 11.1301 8.05464 10.0348 9.26714 9.28359C10.3433 8.61719 11.7132 8.25 13.125 8.25C14.5644 8.25 15.8984 8.60156 16.9808 9.26758C18.196 10.0148 19.0121 11.1164 19.3394 12.4531C19.3828 12.6258 19.3867 12.806 19.3507 12.9804C19.3147 13.1548 19.2398 13.3188 19.1316 13.4602C19.0299 13.5901 18.8998 13.6951 18.7512 13.767C18.6026 13.8389 18.4396 13.8758 18.2746 13.875ZM5.74214 7.15625C4.36753 7.15625 3.15894 5.87813 3.04683 4.30742C2.99136 3.50273 3.24214 2.75859 3.74996 2.21289C4.2523 1.67266 4.96089 1.375 5.74214 1.375C6.52339 1.375 7.22652 1.67422 7.7316 2.21758C8.24331 2.76758 8.49331 3.51016 8.43472 4.3082C8.32261 5.87852 7.11441 7.15625 5.74214 7.15625ZM8.30699 8.38477C7.61988 8.04883 6.72808 7.88086 5.74253 7.88086C4.59175 7.88086 3.47417 8.18086 2.59527 8.72539C1.59878 9.34375 0.928471 10.2441 0.657768 11.3313C0.618153 11.4876 0.614406 11.6509 0.646808 11.8089C0.679209 11.9669 0.746921 12.1156 0.844877 12.2437C0.937826 12.3631 1.0569 12.4595 1.19295 12.5256C1.329 12.5917 1.47839 12.6257 1.62964 12.625H5.96558C6.03876 12.625 6.10962 12.5993 6.1658 12.5524C6.22198 12.5055 6.25992 12.4404 6.273 12.3684C6.2773 12.3438 6.28277 12.3191 6.28902 12.2949C6.62027 10.9645 7.39644 9.84023 8.54331 9.0207C8.5855 8.9903 8.61943 8.94985 8.64202 8.90301C8.66462 8.85618 8.67518 8.80445 8.67274 8.75251C8.67029 8.70057 8.65493 8.65006 8.62803 8.60556C8.60113 8.56106 8.56356 8.52397 8.51871 8.49766C8.45738 8.46172 8.38706 8.42383 8.30699 8.38477Z" fill="#20272C" />
                                </svg>
                                <span className='text-[12px] leading-[18px] text-Main ml-2'>{data.propertiesRoom.numOfPeople} guests</span>
                            </div>

                            <div className='flex items-center mr-8'>
                                <svg xmlns="http://www.w3.org/2000/svg" width="18" height="14" viewBox="0 0 18 14" fill="none">
                                    <path d="M15.875 6.01172C15.481 5.83875 15.0553 5.74963 14.625 5.75H3.375C2.94473 5.74958 2.51907 5.83857 2.125 6.01133C1.56805 6.25489 1.09412 6.65543 0.761131 7.164C0.428145 7.67256 0.250532 8.26712 0.25 8.875V13.25C0.25 13.4158 0.315848 13.5747 0.433058 13.6919C0.550268 13.8092 0.70924 13.875 0.875 13.875C1.04076 13.875 1.19973 13.8092 1.31694 13.6919C1.43415 13.5747 1.5 13.4158 1.5 13.25V12.9375C1.50101 12.8549 1.53426 12.776 1.59265 12.7176C1.65104 12.6593 1.72993 12.626 1.8125 12.625H16.1875C16.2701 12.626 16.349 12.6593 16.4074 12.7176C16.4657 12.776 16.499 12.8549 16.5 12.9375V13.25C16.5 13.4158 16.5658 13.5747 16.6831 13.6919C16.8003 13.8092 16.9592 13.875 17.125 13.875C17.2908 13.875 17.4497 13.8092 17.5669 13.6919C17.6842 13.5747 17.75 13.4158 17.75 13.25V8.875C17.7494 8.26719 17.5717 7.67271 17.2388 7.16422C16.9058 6.65574 16.4319 6.25525 15.875 6.01172ZM13.6875 0.125H4.3125C3.73234 0.125 3.17594 0.355468 2.7657 0.765704C2.35547 1.17594 2.125 1.73234 2.125 2.3125V5.125C2.12502 5.14921 2.13066 5.17309 2.14149 5.19475C2.15231 5.21641 2.16803 5.23525 2.18738 5.2498C2.20674 5.26434 2.22921 5.27419 2.25303 5.27857C2.27684 5.28294 2.30135 5.28172 2.32461 5.275C2.6658 5.17521 3.01951 5.1247 3.375 5.125H3.54023C3.5788 5.12524 3.6161 5.11122 3.64494 5.08562C3.67379 5.06002 3.69215 5.02465 3.69648 4.98633C3.73057 4.68093 3.87596 4.3988 4.10488 4.1938C4.3338 3.9888 4.63021 3.87531 4.9375 3.875H7.125C7.43249 3.87502 7.72919 3.98839 7.95835 4.19341C8.18752 4.39843 8.33308 4.68073 8.36719 4.98633C8.37153 5.02465 8.38988 5.06002 8.41873 5.08562C8.44758 5.11122 8.48487 5.12524 8.52344 5.125H9.47891C9.51747 5.12524 9.55477 5.11122 9.58361 5.08562C9.61246 5.06002 9.63082 5.02465 9.63516 4.98633C9.66922 4.68113 9.81444 4.39916 10.0431 4.19419C10.2718 3.98922 10.5679 3.8756 10.875 3.875H13.0625C13.37 3.87502 13.6667 3.98839 13.8959 4.19341C14.125 4.39843 14.2706 4.68073 14.3047 4.98633C14.309 5.02465 14.3274 5.06002 14.3562 5.08562C14.3851 5.11122 14.4224 5.12524 14.4609 5.125H14.625C14.9805 5.12483 15.3342 5.17547 15.6754 5.27539C15.6987 5.28212 15.7232 5.28333 15.7471 5.27894C15.7709 5.27455 15.7934 5.26466 15.8128 5.25007C15.8321 5.23548 15.8478 5.21659 15.8586 5.19488C15.8694 5.17317 15.875 5.14925 15.875 5.125V2.3125C15.875 1.73234 15.6445 1.17594 15.2343 0.765704C14.8241 0.355468 14.2677 0.125 13.6875 0.125Z" fill="#20272C" />
                                </svg>
                                <span className='text-[12px] leading-[18px] text-Main ml-2'>{data.propertiesRoom.bed} room</span>
                            </div>

                            <div className='flex items-center'>
                                <svg xmlns="http://www.w3.org/2000/svg" width="16" height="16" viewBox="0 0 16 16" fill="none">
                                    <path d="M14.875 10.5V14.875H10.5M14.4766 14.4754L9.875 9.875L14.4766 14.4754ZM1.125 5.5V1.125H5.5M1.52344 1.52461L6.125 6.125L1.52344 1.52461ZM10.5 1.125H14.875V5.5M14.4754 1.52344L9.875 6.125L14.4754 1.52344ZM5.5 14.875H1.125V10.5M1.52461 14.4766L6.125 9.875L1.52461 14.4766Z" fill="#20272C" />
                                    <path d="M14.875 10.5V14.875H10.5M14.4766 14.4754L9.875 9.875M1.125 5.5V1.125H5.5M1.52344 1.52461L6.125 6.125M10.5 1.125H14.875V5.5M14.4754 1.52344L9.875 6.125M5.5 14.875H1.125V10.5M1.52461 14.4766L6.125 9.875" stroke="#20272C" />
                                </svg>
                                <span className='text-[12px] leading-[18px] text-Main ml-2'>{data.propertiesRoom.acreage} m2</span>
                            </div>
                        </div>

                        <div className='h-24 overflow-hidden'>
                            <p className={clsx(styles.itemContent, 'line-clamp-5')}>{data.description}</p>
                        </div>

                        <div className={clsx('text-right w-full', {
                            'flex justify-between': data.price !== 0
                        })}>
                            {
                                data.price !== 0 &&
                                <p className='text-[32px] leading-[40px] font-medium text-Main'>$ {data.price}</p>
                            }
                            <ButtonShare onClick={() => { console.log('hello word!!!') }} style={BtnConstClassName.rounded} content={'View details'} />
                        </div>
                    </div>
                </div>
            }
            {
                isLoading && <LoadingItem />
            }
        </>
    );
}

export default RoomItem